// Config inheritance options
params {
    generic_config_base = "https://raw.githubusercontent.com/sanger-pathogens/nextflow-commons/"
    generic_config_version = "master"
    generic_config_url = ""
}
inherit_generic_config()

manifest {
    name            = 'generate_mags'
    author          = 'PAM Informatics'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/team162/generate_mags'
    description     = 'Generate metagenomic assembled genomes (MAGs) using metaWRAP'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version         = '0.1.8'
}

//TODO: Using sanger-specific paths limits portability, but only solvable if images made public
process.container = "/software/pathogen/images/metawrap_custom-1.3.2-c12.simg"

params {
    results_dir = "./nextflow_results"  //TODO: Could change this to outdir (inherited from generic config)
    manifest = ""
    //TODO: Using Sanger-specific paths limits portability, but short of reimplementing the whole generic profile,
    // don't know what can be done about this... 
    bmtagger_db = "/data/pam/software/BMTAGGER_INDEX"
    bmtagger_host = "T2T-CHM13v2.0"
    publish_host_reads = false
    skip_qc = false
    fastspades = false
    keep_allbins = false
    skip_reassembly = false
    keep_assembly = false
    keep_assembly_files = false
    keep_binning = false
    keep_bin_refinement = false
    keep_reassembly = false
    keep_metawrap_qc = false

    // LSF options
    queue_size = 50
    submit_rate_limit = '50/2min'
}

// Helper functions
def inherit_generic_config() {
    config_url = params.generic_config_url ? params.generic_config_url : "${params.generic_config_base}/${params.generic_config_version}/configs/nextflow.config"
    try {
        includeConfig "${config_url}"
    } catch (Exception e) {
        System.err.println("ERROR: Could not load generic config: ${config_url}")
        System.err.println("Encountered the following exception:")
        throw e
    }
}
